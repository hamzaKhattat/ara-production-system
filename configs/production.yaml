# Production Configuration for ARA Router

app:
  name: asterisk-ara-router
  version: 2.0.0
  environment: production
  debug: false

database:
  driver: mysql
  host: ${DB_HOST:localhost}
  port: ${DB_PORT:3306}
  username: ${DB_USER:asterisk}
  password: ${DB_PASS:asterisk_secure_pass}
  database: ${DB_NAME:asterisk_ara}
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: 5m
  retry_attempts: 3
  retry_delay: 1s

redis:
  host: ${REDIS_HOST:localhost}
  port: ${REDIS_PORT:6379}
  password: ${REDIS_PASS:}
  db: 0
  pool_size: 10
  min_idle_conns: 5
  max_retries: 3

agi:
  listen_address: 0.0.0.0
  port: ${AGI_PORT:4573}
  max_connections: 1000
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s
  shutdown_timeout: 30s

asterisk:
  ami:
    host: ${AMI_HOST:localhost}
    port: ${AMI_PORT:5038}
    username: ${AMI_USER:admin}
    password: ${AMI_PASS:admin_secure_pass}
    reconnect_interval: 5s
    ping_interval: 30s
  
  ara:
    transport_reload_interval: 60s
    endpoint_cache_ttl: 300s
    dialplan_cache_ttl: 600s

router:
  did_allocation_timeout: 5s
  call_cleanup_interval: 5m
  stale_call_timeout: 30m
  max_retries: 3
  retry_backoff: exponential
  
  verification:
    enabled: true
    strict_mode: true
    log_failures: true
  
  recording:
    enabled: true
    path: /var/spool/asterisk/monitor
    format: wav
    mix_type: both

monitoring:
  metrics:
    enabled: true
    port: ${METRICS_PORT:9090}
    path: /metrics
    
  health:
    enabled: true
    port: ${HEALTH_PORT:8080}
    liveness_path: /health/live
    readiness_path: /health/ready
    
  logging:
    level: ${LOG_LEVEL:info}
    format: json
    output: stdout
    file:
      enabled: true
      path: /var/log/asterisk-router/router.log
      max_size: 100M
      max_backups: 10
      max_age: 30
      compress: true

security:
  tls:
    enabled: ${TLS_ENABLED:false}
    cert_file: ${TLS_CERT:}
    key_file: ${TLS_KEY:}
    ca_file: ${TLS_CA:}
  
  api:
    enabled: true
    port: ${API_PORT:8081}
    auth_token: ${API_TOKEN:}
    rate_limit: 100
    cors_enabled: true

performance:
  worker_pool_size: ${WORKER_POOL_SIZE:100}
  queue_size: ${QUEUE_SIZE:1000}
  batch_size: 50
  gc_interval: 1m
